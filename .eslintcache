[{"D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\index.js":"1","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\reportWebVitals.js":"2","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\App.js":"3","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\components\\Todo.js":"4","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\components\\Filter.js":"5","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\components\\TodoItem.js":"6","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\components\\Input.js":"7","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\lib\\util.js":"8","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\hooks\\storage.js":"9"},{"size":517,"mtime":1654234165652,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1654234165653,"results":"12","hashOfConfig":"11"},{"size":291,"mtime":1654234165649,"results":"13","hashOfConfig":"11"},{"size":1993,"mtime":1654611868722,"results":"14","hashOfConfig":"11"},{"size":948,"mtime":1654358058245,"results":"15","hashOfConfig":"11"},{"size":675,"mtime":1654356089647,"results":"16","hashOfConfig":"11"},{"size":841,"mtime":1654357192489,"results":"17","hashOfConfig":"11"},{"size":68,"mtime":1654234165653,"results":"18","hashOfConfig":"11"},{"size":1013,"mtime":1654611949606,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"67zsex",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\index.js",[],["43","44"],"D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\reportWebVitals.js",[],"D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\App.js",[],"D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\components\\Todo.js",["45","46"],"import React, { useState } from 'react';\r\n\r\n/* \r\n  【Todoのデータ構成】\r\n ・key：Todoを特定するID（String）\r\n ・text：Todoの内容（String）\r\n ・done：完了状態（Boolean true:完了済み,, false:未完了）\r\n*/\r\n\r\n/* コンポーネント */\r\nimport TodoItem from './TodoItem';\r\nimport Input from './Input';\r\nimport Filter from './Filter';\r\n\r\n/* カスタムフック */\r\nimport useStorage from '../hooks/storage';\r\n\r\n/* ライブラリ */\r\nimport { getKey } from \"../lib/util\";\r\n\r\nfunction Todo() {\r\n  const [items, putItems, clearItems] = useStorage();\r\n  const [filter, setFilter] = React.useState('ALL');\r\n  const displayItems = items.filter(item => {\r\n    if (filter === 'ALL') return true;\r\n    if (filter === 'TODO') return !item.done;\r\n    if (filter === 'DONE') return item.done;\r\n  });\r\n  const handleFilterChange = value => setFilter(value);\r\n  const handleCheck = checked => {\r\n    const newItems = items.map(item => {\r\n      if (item.key === checked.key) {\r\n        item.done = !item.done;\r\n      }\r\n      return item;\r\n    });\r\n    putItems(newItems);\r\n  }\r\n  const handleAdd = text => {\r\n    putItems([...items, { key: getKey(), text, done: false }]);\r\n  }\r\n  return (\r\n    <div className=\"panel\">\r\n      <div className=\"panel-heading\">\r\n        ITSS ToDoアプリ\r\n      </div>\r\n      <Input onAdd={handleAdd} />\r\n      <Filter\r\n        onChange={handleFilterChange}\r\n        value={filter}\r\n      />\r\n      {displayItems.map(item => (\r\n        <label className=\"panel-block\">\r\n\r\n          <TodoItem\r\n            key={item.key}\r\n            item={item}\r\n            onCheck={handleCheck}\r\n          />\r\n        </label>\r\n      ))}\r\n      <div className=\"panel-block\">\r\n        {displayItems.length} items\r\n      </div>\r\n      <div className=\"panel-block\">\r\n        <button className=\"button is-light is-fullwidth\" onClick={clearItems}>\r\n          全てのToDoを削除\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\components\\Filter.js",["47","48","49"],"/* \r\n  【Filterコンポーネント】\r\n ・該当するTodoをステータス毎にで分けてリスト表示する\r\n ・タブで表示する\r\n ・サポートするステータスは「すべて」「未完了」「完了済み」\r\n*/\r\nfunction Filter({value,onChange}) {\r\n  const handleClick = (key,e) => {\r\n    e.preventDefault();\r\n    onChange(key);\r\n  };\r\n  return (\r\n    <div className=\"panel-tabs\">\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'ALL')}\r\n        className = {value === 'ALL' ? 'isActive' : ''}\r\n      >全て\r\n      </a>\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'TODO')}\r\n        className={value === 'TODO' ? 'isActive' : ''}\r\n      >未完了\r\n      </a>\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'DONE')}\r\n        className={value === 'DONE' ? 'isActive' : ''}\r\n      >完了済み\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\components\\TodoItem.js",[],"D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\components\\Input.js",["50"],"import react from 'react';\r\nimport React, { useState } from 'react';\r\n/* \r\n  【inputコンポーネント】\r\n ・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\r\n ・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\r\n*/\r\nfunction Input({onAdd}) {\r\n  const [text,setText] = react.useState('');\r\n  const handleChange = e => setText(e.target.value);\r\n  const handleKeyDown = e => {\r\n    if (e.keyCode  === 13) {\r\n      onAdd(text);\r\n      setText('');\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"panel-block\">\r\n      <input \r\n        class = \"input\"\r\n        type = \"text\"\r\n        placeholder='Endter to add'\r\n        value={text}\r\n        onChange = {handleChange}\r\n        onKeyDown = {handleKeyDown}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\lib\\util.js",[],"D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\hooks\\storage.js",["51"],"import { useState, useEffect } from 'react';\r\n\r\n/* \r\n  【Storageフック】\r\n　・TodoをlocalStorageを使って保存する\r\n　・以下機能をサポートする\r\n　  - localstrageに保存されているすべてのTodoの読み出し機能\r\n　  - Todoをlocalstrageに保存する\r\n　  - localstrageにあるTodoを削除する\r\n*/\r\n\r\nconst STORAGE_KEY = 'itss-todo';\r\n\r\nfunction useStorage() {\r\n  const [items, setItems] = useState([]);\r\n　\r\n　/* 副作用を使う */\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(STORAGE_KEY);\r\n\r\n    if(!data){\r\n      localStorage.setItem(STORAGE_KEY,  JSON.stringify(items));\r\n      setItems(items);\r\n    }\r\n    \r\n  }, []);\r\n\r\n  const putItems = items => {\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(items));\r\n    setItems(items);\r\n    \r\n  };\r\n\r\n  const clearItems = () => {\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify([]));\r\n    setItems([]);\r\n  };\r\n\r\n  return [items, putItems, clearItems];\r\n}\r\n\r\nexport default useStorage;",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":25},{"ruleId":"60","severity":1,"message":"61","line":24,"column":42,"nodeType":"62","messageId":"63","endLine":24,"endColumn":44},{"ruleId":"64","severity":1,"message":"65","line":14,"column":7,"nodeType":"66","endLine":18,"endColumn":8},{"ruleId":"64","severity":1,"message":"65","line":20,"column":7,"nodeType":"66","endLine":24,"endColumn":8},{"ruleId":"64","severity":1,"message":"65","line":26,"column":7,"nodeType":"66","endLine":30,"endColumn":8},{"ruleId":"56","severity":1,"message":"57","line":2,"column":17,"nodeType":"58","messageId":"59","endLine":2,"endColumn":25},{"ruleId":"67","severity":1,"message":"68","line":26,"column":6,"nodeType":"69","endLine":26,"endColumn":8,"suggestions":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'items'. Either include it or remove the dependency array. You can also do a functional update 'setItems(i => ...)' if you only need 'items' in the 'setItems' call.","ArrayExpression",["73"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [items]",{"range":"76","text":"77"},[540,542],"[items]"]