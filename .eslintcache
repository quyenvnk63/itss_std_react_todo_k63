[{"D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\index.js":"1","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\reportWebVitals.js":"2","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\App.js":"3","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\components\\Todo.js":"4","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\components\\Filter.js":"5","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\components\\TodoItem.js":"6","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\components\\Input.js":"7","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\lib\\util.js":"8","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\hooks\\storage.js":"9","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\hooks\\fbStorage.js":"10","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\lib\\firebase.js":"11"},{"size":517,"mtime":1654234165652,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1654234165653,"results":"14","hashOfConfig":"13"},{"size":291,"mtime":1654234165649,"results":"15","hashOfConfig":"13"},{"size":1880,"mtime":1656051092907,"results":"16","hashOfConfig":"13"},{"size":948,"mtime":1654358058245,"results":"17","hashOfConfig":"13"},{"size":675,"mtime":1654356089647,"results":"18","hashOfConfig":"13"},{"size":841,"mtime":1654357192489,"results":"19","hashOfConfig":"13"},{"size":68,"mtime":1654234165653,"results":"20","hashOfConfig":"13"},{"size":1013,"mtime":1654611949606,"results":"21","hashOfConfig":"13"},{"size":1283,"mtime":1656050745904,"results":"22","hashOfConfig":"13"},{"size":3005,"mtime":1656049764708,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"67zsex",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\index.js",[],["51","52"],"D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\reportWebVitals.js",[],"D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\App.js",[],"D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\components\\Todo.js",["53","54","55"],"D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\components\\Filter.js",["56","57","58"],"/* \r\n  【Filterコンポーネント】\r\n ・該当するTodoをステータス毎にで分けてリスト表示する\r\n ・タブで表示する\r\n ・サポートするステータスは「すべて」「未完了」「完了済み」\r\n*/\r\nfunction Filter({value,onChange}) {\r\n  const handleClick = (key,e) => {\r\n    e.preventDefault();\r\n    onChange(key);\r\n  };\r\n  return (\r\n    <div className=\"panel-tabs\">\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'ALL')}\r\n        className = {value === 'ALL' ? 'isActive' : ''}\r\n      >全て\r\n      </a>\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'TODO')}\r\n        className={value === 'TODO' ? 'isActive' : ''}\r\n      >未完了\r\n      </a>\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'DONE')}\r\n        className={value === 'DONE' ? 'isActive' : ''}\r\n      >完了済み\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\components\\TodoItem.js",[],"D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\components\\Input.js",["59"],"import react from 'react';\r\nimport React, { useState } from 'react';\r\n/* \r\n  【inputコンポーネント】\r\n ・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\r\n ・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\r\n*/\r\nfunction Input({onAdd}) {\r\n  const [text,setText] = react.useState('');\r\n  const handleChange = e => setText(e.target.value);\r\n  const handleKeyDown = e => {\r\n    if (e.keyCode  === 13) {\r\n      onAdd(text);\r\n      setText('');\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"panel-block\">\r\n      <input \r\n        class = \"input\"\r\n        type = \"text\"\r\n        placeholder='Endter to add'\r\n        value={text}\r\n        onChange = {handleChange}\r\n        onKeyDown = {handleKeyDown}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\lib\\util.js",[],"D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\hooks\\storage.js",["60"],"import { useState, useEffect } from 'react';\r\n\r\n/* \r\n  【Storageフック】\r\n　・TodoをlocalStorageを使って保存する\r\n　・以下機能をサポートする\r\n　  - localstrageに保存されているすべてのTodoの読み出し機能\r\n　  - Todoをlocalstrageに保存する\r\n　  - localstrageにあるTodoを削除する\r\n*/\r\n\r\nconst STORAGE_KEY = 'itss-todo';\r\n\r\nfunction useStorage() {\r\n  const [items, setItems] = useState([]);\r\n　\r\n　/* 副作用を使う */\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(STORAGE_KEY);\r\n\r\n    if(!data){\r\n      localStorage.setItem(STORAGE_KEY,  JSON.stringify(items));\r\n      setItems(items);\r\n    }\r\n    \r\n  }, []);\r\n\r\n  const putItems = items => {\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(items));\r\n    setItems(items);\r\n    \r\n  };\r\n\r\n  const clearItems = () => {\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify([]));\r\n    setItems([]);\r\n  };\r\n\r\n  return [items, putItems, clearItems];\r\n}\r\n\r\nexport default useStorage;","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\hooks\\fbStorage.js",["61"],"import { useState, useEffect } from 'react';\r\n\r\n/* ライブラリ */\r\nimport { addFirebaseItem,\r\n         updateFirebaseItem, \r\n         getFirebaseItems, \r\n         clearFirebaseItem \r\n        } from \"../lib/firebase\";\r\n\r\nfunction useFbStorage() {\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getItems();\r\n    }, [items]);\r\n\r\n    const getItems = async () => {\r\n        const _items = await getFirebaseItems();\r\n        setItems(_items);\r\n    };\r\n\r\n    const addItem = async item => {\r\n        const newItem = { text: item.text, done: item.done };\r\n        await addFirebaseItem(newItem);\r\n        setItems([...items, newItem]);\r\n    };\r\n\r\n    const updateItem = async checked => {\r\n        const changes = { done: !checked.done };\r\n        await updateFirebaseItem(changes, checked.id);\r\n        const newItems = items.map((item) => {\r\n            if (item.id === checked.id) {\r\n                item = { ...item, changes }\r\n            }\r\n            return item;\r\n        })\r\n        setItems(newItems);\r\n    }\r\n\r\n    const clearItems = () => {\r\n        items.map(item => {\r\n            clearFirebaseItem(item);\r\n        })\r\n        setItems([]);\r\n    };\r\n\r\n    return [items, addItem, updateItem, clearItems];\r\n}\r\n\r\nexport default useFbStorage;","D:\\reactjs-tutorial\\itss4\\itss_std_react_todo_k63\\src\\lib\\firebase.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":25},{"ruleId":"66","severity":1,"message":"70","line":21,"column":10,"nodeType":"68","messageId":"69","endLine":21,"endColumn":16},{"ruleId":"71","severity":1,"message":"72","line":26,"column":42,"nodeType":"73","messageId":"74","endLine":26,"endColumn":44},{"ruleId":"75","severity":1,"message":"76","line":14,"column":7,"nodeType":"77","endLine":18,"endColumn":8},{"ruleId":"75","severity":1,"message":"76","line":20,"column":7,"nodeType":"77","endLine":24,"endColumn":8},{"ruleId":"75","severity":1,"message":"76","line":26,"column":7,"nodeType":"77","endLine":30,"endColumn":8},{"ruleId":"66","severity":1,"message":"67","line":2,"column":17,"nodeType":"68","messageId":"69","endLine":2,"endColumn":25},{"ruleId":"78","severity":1,"message":"79","line":26,"column":6,"nodeType":"80","endLine":26,"endColumn":8,"suggestions":"81"},{"ruleId":"71","severity":1,"message":"82","line":41,"column":24,"nodeType":"73","messageId":"83","endLine":41,"endColumn":26},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'getKey' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'items'. Either include it or remove the dependency array. You can also do a functional update 'setItems(i => ...)' if you only need 'items' in the 'setItems' call.","ArrayExpression",["86"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [items]",{"range":"89","text":"90"},[540,542],"[items]"]